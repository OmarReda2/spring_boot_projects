{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../service/product.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ProductListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6);\n    i0.ɵɵelement(2, \"img\", 7);\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 9);\n    i0.ɵɵtext(9, \"Add to cart\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tempProduct_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", tempProduct_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", tempProduct_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 3, tempProduct_r1.unitPrice, \"USD\"));\n  }\n}\nexport class ProductListComponent {\n  constructor(prodictService, route) {\n    this.prodictService = prodictService;\n    this.route = route;\n    this.products = [];\n    this.currentCategoryId = 1;\n    this.searchMode = false;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.listProduct();\n    });\n    // this.listProduct();\n  }\n\n  listProduct() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n    if (this.searchMode) this.handleSearchProducts();else this.handleListProducts();\n  }\n  handleListProducts() {\n    const hasCategoryId = this.route.snapshot.paramMap.has('id');\n    if (hasCategoryId) {\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n    } else {\n      this.currentCategoryId = 1;\n    }\n    // this.currentCategoryId = 1;\n    this.prodictService.getProductList(this.currentCategoryId).subscribe(data => this.products = data);\n  }\n  handleSearchProducts() {\n    const theKeyword = this.route.snapshot.paramMap.get('keyword');\n    this.prodictService.searchProducts(theKeyword).subscribe(data => {\n      this.products = data;\n    });\n  }\n  static {\n    this.ɵfac = function ProductListComponent_Factory(t) {\n      return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductListComponent,\n      selectors: [[\"app-product-list\"]],\n      decls: 5,\n      vars: 1,\n      consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [1, \"row\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"product-box\"], [1, \"img-responsive\", 3, \"src\"], [1, \"price\"], [\"href\", \"#\", 1, \"primary-btn\"]],\n      template: function ProductListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtemplate(4, ProductListComponent_div_4_Template, 10, 6, \"div\", 4);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.products);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.CurrencyPipe],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAKgBA,8BAA2D;IAEnDA,yBAA2D;IAC3DA,0BAAI;IAACA,YAAqB;IAAAA,iBAAK;IAC/BA,8BAAmB;IAAAA,YAA0C;;IAAAA,iBAAM;IACnEA,4BAAgC;IAAAA,2BAAW;IAAAA,iBAAI;;;;IAH1CA,eAA8B;IAA9BA,0EAA8B;IAC9BA,eAAqB;IAArBA,oDAAqB;IACPA,eAA0C;IAA1CA,2EAA0C;;;ACCrF,OAAM,MAAOC,oBAAoB;EAM/BC,YAAoBC,cAA8B,EACxCC,KAAqB;IADX,mBAAc,GAAdD,cAAc;IACxB,UAAK,GAALC,KAAK;IALf,aAAQ,GAAc,EAAE;IACxB,sBAAiB,GAAW,CAAC;IAC7B,eAAU,GAAY,KAAK;EAGQ;EAEnCC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAAC,MAAK;MACjC,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,CAAC;IAEF;EAEF;;EAEAA,WAAW;IACT,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,SAAS,CAAC;IAE7D,IAAG,IAAI,CAACF,UAAU,EAChB,IAAI,CAACG,oBAAoB,EAAE,CAAC,KAE5B,IAAI,CAACC,kBAAkB,EAAE;EAE7B;EAKAA,kBAAkB;IACf,MAAMC,aAAa,GAAY,IAAI,CAACV,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,IAAI,CAAC;IAEtE,IAAIG,aAAa,EAAE;MACjB,IAAI,CAACC,iBAAiB,GAAG,CAAC,IAAI,CAACX,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACU,GAAG,CAAC,IAAI,CAAE;KAClE,MACI;MACH,IAAI,CAACD,iBAAiB,GAAG,CAAC;;IAG5B;IAGA,IAAI,CAACZ,cAAc,CAChBc,cAAc,CAAC,IAAI,CAACF,iBAAiB,CAAC,CACtCR,SAAS,CACRW,IAAI,IAAI,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAC7B;EACL;EAGAN,oBAAoB;IAClB,MAAMQ,UAAU,GAAI,IAAI,CAAChB,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACU,GAAG,CAAC,SAAS,CAAG;IAEjE,IAAI,CAACb,cAAc,CAACkB,cAAc,CAACD,UAAU,CAAC,CAACb,SAAS,CACtDW,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAID,IAAI;IACvB,CAAC,CACF;EACH;;;uBA5DWjB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDVjC1B,8BAA0B;UAKVA,sEAOM;UAEVA,iBAAM;;;UAT2BA,eAAW;UAAXA,sCAAW","names":["i0","ProductListComponent","constructor","prodictService","route","ngOnInit","paramMap","subscribe","listProduct","searchMode","snapshot","has","handleSearchProducts","handleListProducts","hasCategoryId","currentCategoryId","get","getProductList","data","products","theKeyword","searchProducts","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Practice\\Java\\Full Stack Angular and Java Spring Boot E-Commerce Website\\ecommerce project\\project-2\\Frontend\\ecommerce-app\\src\\app\\components\\product-list\\product-list.component.html","E:\\important - (To Backup)\\Programming (Practice & Projects)\\Practice\\Java\\Full Stack Angular and Java Spring Boot E-Commerce Website\\ecommerce project\\project-2\\Frontend\\ecommerce-app\\src\\app\\components\\product-list\\product-list.component.ts"],"sourcesContent":["<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n\n                <div *ngFor=\"let tempProduct of products\" class=\"col-md-3\">\n                    <div class=\"product-box\">\n                        <img src=\"{{tempProduct.imageUrl}}\" class=\"img-responsive\">\n                        <h1> {{tempProduct.name}} </h1>\n                        <div class=\"price\">{{tempProduct.unitPrice | currency:'USD'}}</div>\n                        <a href=\"#\" class=\"primary-btn\">Add to cart</a>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Product } from 'src/app/common/product';\nimport { ProductService } from './../../service/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products: Product[] = [];\n  currentCategoryId: number = 1;\n  searchMode: boolean = false;\n\n  constructor(private prodictService: ProductService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.listProduct();\n    })\n\n    // this.listProduct();\n\n  }\n\n  listProduct() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n    if(this.searchMode)\n      this.handleSearchProducts();\n    else\n      this.handleListProducts()\n\n  }\n\n\n\n\n  handleListProducts() {\n     const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\n\n    if (hasCategoryId) {\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id')!;\n    }\n    else {\n      this.currentCategoryId = 1;\n    }\n\n    // this.currentCategoryId = 1;\n\n\n    this.prodictService\n      .getProductList(this.currentCategoryId)\n      .subscribe(\n        data => this.products = data\n      )\n  }\n\n\n  handleSearchProducts() {\n    const theKeyword = (this.route.snapshot.paramMap.get('keyword'))!\n\n    this.prodictService.searchProducts(theKeyword).subscribe(\n      data => {\n        this.products  = data;\n      }\n    )\n  }\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}