{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserDataService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = \"http://localhost:8080\";\n  }\n  getUserData(id) {\n    const userUrl = `${this.baseUrl}/users/${id}`;\n    return this.httpclient.get(userUrl);\n  }\n  updateUserData(id, user) {\n    const userUrl = `${this.baseUrl}/users/${id}`;\n    return this.httpclient.put(userUrl, user);\n  }\n  getCoursesData(userId) {\n    const searchUrl = `${this.baseUrl}/courses/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl).pipe(map(res => res._embedded.courses));\n  }\n  getEducationsData(userId) {\n    const searchUrl = `${this.baseUrl}/educations/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl).pipe(map(res => res._embedded.educations));\n  }\n  getLinksData(userId) {\n    const searchUrl = `${this.baseUrl}/links/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl).pipe(map(res => res._embedded.links));\n  }\n  static {\n    this.ɵfac = function UserDataService_Factory(t) {\n      return new (t || UserDataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserDataService,\n      factory: UserDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAASA,GAAG,QAAoB,MAAM;;;AAQtC,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAJtB,YAAO,GAAG,uBAAuB;EAII;EAG7CC,WAAW,CAACC,EAAS;IACnB,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACC,OAAO,UAAUF,EAAE,EAAE;IAC7C,OAAO,IAAI,CAACF,UAAU,CAACK,GAAG,CAAOF,OAAO,CAAC;EAC3C;EAEAG,cAAc,CAACJ,EAAS,EAAEK,IAAS;IACjC,MAAMJ,OAAO,GAAG,GAAG,IAAI,CAACC,OAAO,UAAUF,EAAE,EAAE;IAC7C,OAAO,IAAI,CAACF,UAAU,CAACQ,GAAG,CAAOL,OAAO,EAAEI,IAAI,CAAC;EACjD;EAGAE,cAAc,CAACC,MAAa;IAC1B,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACP,OAAO,uCAAuCM,MAAM,EAAE;IAChF,OAAO,IAAI,CAACV,UAAU,CAACK,GAAG,CAAgBM,SAAS,CAAC,CAACC,IAAI,CACvDf,GAAG,CAACgB,GAAG,IAAIA,GAAG,CAACC,SAAS,CAACC,OAAO,CAAC,CAClC;EACH;EAGAC,iBAAiB,CAACN,MAAa;IAC7B,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACP,OAAO,0CAA0CM,MAAM,EAAE;IACnF,OAAO,IAAI,CAACV,UAAU,CAACK,GAAG,CAAmBM,SAAS,CAAC,CAACC,IAAI,CAC1Df,GAAG,CAACgB,GAAG,IAAIA,GAAG,CAACC,SAAS,CAACG,UAAU,CAAC,CACrC;EACH;EAGAC,YAAY,CAACR,MAAa;IACxB,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACP,OAAO,qCAAqCM,MAAM,EAAE;IAC9E,OAAO,IAAI,CAACV,UAAU,CAACK,GAAG,CAAcM,SAAS,CAAC,CAACC,IAAI,CACrDf,GAAG,CAACgB,GAAG,IAAIA,GAAG,CAACC,SAAS,CAACK,KAAK,CAAC,CAChC;EACH;;;uBAzCWrB,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAsB,SAAftB,eAAe;MAAAuB,YAFd;IAAM;EAAA","names":["map","UserDataService","constructor","httpclient","getUserData","id","userUrl","baseUrl","get","updateUserData","user","put","getCoursesData","userId","searchUrl","pipe","res","_embedded","courses","getEducationsData","educations","getLinksData","links","factory","providedIn"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\services\\user-data.service.ts"],"sourcesContent":["import { User } from 'src/app/common/user';\nimport { Link } from './../common/link';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { User } from '../common/user';\nimport { Course } from '../common/course';\nimport { Education } from '../common/education';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  private baseUrl = \"http://localhost:8080\";\n  \n\n\n  constructor(private httpclient:HttpClient) { }\n\n\n  getUserData(id:number):Observable<User>{\n    const userUrl = `${this.baseUrl}/users/${id}`\n    return this.httpclient.get<User>(userUrl);\n  }\n\n  updateUserData(id:number, user:User):Observable<User>{\n    const userUrl = `${this.baseUrl}/users/${id}`\n    return this.httpclient.put<User>(userUrl, user);\n  }\n\n\n  getCoursesData(userId:number):Observable<Course[]>{\n    const searchUrl = `${this.baseUrl}/courses/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get<getCoursesRes>(searchUrl).pipe(\n      map(res => res._embedded.courses)\n    )\n  }\n\n\n  getEducationsData(userId:number):Observable<Education[]>{\n    const searchUrl = `${this.baseUrl}/educations/search/findByUserId?userId=${userId}`\n    return this.httpclient.get<getEducatoinsRes>(searchUrl).pipe(\n      map(res => res._embedded.educations)\n    )\n  }\n\n\n  getLinksData(userId:number):Observable<Link[]>{\n    const searchUrl = `${this.baseUrl}/links/search/findByUserId?userId=${userId}`\n    return this.httpclient.get<getLinksRes>(searchUrl).pipe(\n      map(res => res._embedded.links)\n    )\n  }\n}\n\n\n\n\n\n\n\n\ninterface getCoursesRes {\n  _embedded: {\n    courses: Course[]\n  }\n}\n\ninterface getEducatoinsRes {\n  _embedded: {\n    educations: Education[];\n  }\n}\n\ninterface getLinksRes {\n  _embedded: {\n    links: Link[];\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}