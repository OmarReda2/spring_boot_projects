{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/user-data.service\";\nimport * as i2 from \"@angular/common\";\nfunction CourseComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" -------------------- \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate5(\" \", course_r1.id, \" \", course_r1.name, \" \", course_r1.description, \" \", course_r1.startDate, \"-\", course_r1.endDate, \" \");\n  }\n}\nexport class CourseComponent {\n  constructor(userDataService) {\n    this.userDataService = userDataService;\n    this.id = 1;\n    this.updatedCoursesArr = new Map();\n  }\n  ngOnInit() {\n    this.getCourses();\n  }\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(data => {\n      this.courses = data;\n    });\n  }\n  addUpdatedLinks(course) {\n    this.updatedCoursesArr.set(course.id, course);\n    // console.log(link);\n  }\n\n  updateLinkData() {\n    this.updatedCoursesArr?.forEach(link => {\n      this.userDataService.updateLinkData(this.id, link.id, link).subscribe(data => {\n        alert(\"Link Updated Successfully\");\n      }, err => {\n        alert(\"Link Update Failed\");\n        console.log(err);\n      });\n    });\n  }\n  static {\n    this.ɵfac = function CourseComponent_Factory(t) {\n      return new (t || CourseComponent)(i0.ɵɵdirectiveInject(i1.UserDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseComponent,\n      selectors: [[\"app-course\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"bg-secondary\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function CourseComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, CourseComponent_div_1_Template, 4, 5, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IACIA,2BAAqC;IAE7BA,YAIJ;IAAAA,iBAAM;IACNA,sCACJ;IAAAA,iBAAM;;;;IANEA,eAIJ;IAJIA,gJAIJ;;;ACER,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAJnC,OAAE,GAAU,CAAC;IAEb,sBAAiB,GAAgC,IAAIC,GAAG,EAA2B;EAE3B;EACxDC,QAAQ;IAEN,IAAI,CAACC,UAAU,EAAE;EACnB;EAGAA,UAAU;IACR,IAAI,CAACH,eAAe,CAACI,cAAc,CAAC,IAAI,CAACC,EAAE,CAAC,CAACC,SAAS,CACpDC,IAAI,IAAG;MACL,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CACF;EACH;EACCE,eAAe,CAACC,MAAa;IAC1B,IAAI,CAACC,iBAAiB,CAACC,GAAG,CAACF,MAAM,CAACL,EAAE,EAAEK,MAAM,CAAC;IAC7C;EACF;;EACAG,cAAc;IACZ,IAAI,CAACF,iBAAiB,EAAEG,OAAO,CAACC,IAAI,IAAG;MACrC,IAAI,CAACf,eAAe,CAACa,cAAc,CAAC,IAAI,CAACR,EAAE,EAACU,IAAI,CAACV,EAAE,EAACU,IAAI,CAAC,CAACT,SAAS,CACjEC,IAAI,IAAG;QACLS,KAAK,CAAC,2BAA2B,CAAC;MAGpC,CAAC,EACDC,GAAG,IAAE;QACHD,KAAK,CAAC,oBAAoB,CAAC;QAC3BE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAElB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;;;uBAvCSnB,eAAe;IAAA;EAAA;;;YAAfA,eAAe;MAAAsB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDT5B3B,8BAA0B;UACtBA,gEAQM;UACVA,iBAAM;;;UATsBA,eAAW;UAAXA,qCAAW","names":["i0","CourseComponent","constructor","userDataService","Map","ngOnInit","getCourses","getCoursesData","id","subscribe","data","courses","addUpdatedLinks","course","updatedCoursesArr","set","updateLinkData","forEach","link","alert","err","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.html","E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.ts"],"sourcesContent":["<div class=\"bg-secondary\">\n    <div *ngFor=\"let course of courses;\">\n        <div>\n            {{course.id}}\n            {{course.name}}\n            {{course.description}}\n            {{course.startDate}}-{{course.endDate}}\n        </div>\n        --------------------\n    </div>\n</div>\n\n\n","import { UserDataService } from './../../services/user-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Course } from 'src/app/common/course';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit{\n\n  id:number = 1;\n  courses?:Course[];\n  updatedCoursesArr:Map<number|undefined,Course> = new Map<number|undefined,Course>();\n\n  constructor(private userDataService: UserDataService) { }\n  ngOnInit(): void {\n    \n    this.getCourses()\n  }\n\n\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(\n      data => {\n        this.courses = data;\n      }\n    )\n  }\n   addUpdatedLinks(course:Course){\n      this.updatedCoursesArr.set(course.id, course)\n      // console.log(link);\n    }\n    updateLinkData(){\n      this.updatedCoursesArr?.forEach(link => {\n        this.userDataService.updateLinkData(this.id,link.id,link).subscribe(\n          data => {\n            alert(\"Link Updated Successfully\")\n            \n            \n          },\n          err=>{\n            alert(\"Link Update Failed\")\n            console.log(err);\n            \n          }\n        )\n      });\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}