{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/user-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CourseComponent_div_3_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseComponent_div_3_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Close Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4)(2, \"div\", 5)(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8)(10, \"button\", 9);\n    i0.ɵɵtext(11, \" \\u2699\\uFE0F \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ul\", 10)(13, \"li\")(14, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CourseComponent_div_3_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCourse(ctx_r4.id, course_r1.id));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CourseComponent_div_3_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.toggleEdit());\n    });\n    i0.ɵɵtemplate(17, CourseComponent_div_3_span_17_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(18, CourseComponent_div_3_span_18_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(19, \"label\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"textarea\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_div_3_Template_textarea_ngModelChange_21_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const course_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(course_r1.description = $event);\n    })(\"ngModelChange\", function CourseComponent_div_3_Template_textarea_ngModelChange_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.addUpdatedCourses(course_r1));\n    });\n    i0.ɵɵtext(22, \"                        \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", course_r1.startDate, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", course_r1.endDate, \" \");\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.disabled === true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.disabled === false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", course_r1.description);\n    i0.ɵɵproperty(\"ngModel\", course_r1.description)(\"disabled\", ctx_r0.disabled);\n  }\n}\nexport class CourseComponent {\n  constructor(userDataService) {\n    this.userDataService = userDataService;\n    this.id = 1;\n    // courses?:Course[];\n    this.courses = new BehaviorSubject([]);\n    this.updatedCoursesArr = new Map();\n    this.disabled = true;\n  }\n  ngOnInit() {\n    this.getCourses();\n  }\n  toggleEdit() {\n    this.disabled = !this.disabled;\n    console.log(this.disabled);\n  }\n  trackByItem(index, course) {\n    return course.id;\n  }\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(data => {\n      // this.courses = data;\n      this.courses.next(data);\n    });\n  }\n  addUpdatedCourses(course) {\n    this.updatedCoursesArr.set(course.id, course);\n    // console.log(link);\n  }\n\n  updateCourseData() {\n    this.updatedCoursesArr?.forEach(course => {\n      this.userDataService.updateCourseData(this.id, course.id, course).subscribe(data => {\n        alert(\"Course Updated Successfully\");\n      }, err => {\n        alert(\"Course Update Failed\");\n        console.log(err);\n      });\n    });\n  }\n  deleteCourse(userId, courseId) {\n    this.userDataService.deleteCourse(userId, courseId).subscribe(data => {\n      alert(\"Course Deleted Successfully\");\n      const updatedCourses = this.courses.value.filter(course => course.id !== courseId);\n      this.courses.next(updatedCourses);\n    }, err => {\n      alert(\"Course Delete Failed\");\n      console.log(err);\n    });\n  }\n  static {\n    this.ɵfac = function CourseComponent_Factory(t) {\n      return new (t || CourseComponent)(i0.ɵɵdirectiveInject(i1.UserDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseComponent,\n      selectors: [[\"app-course\"]],\n      decls: 8,\n      vars: 4,\n      consts: [[1, \"alert\", \"alert-secondary\", \"m-3\", \"p-3\"], [3, \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", \"mt-3\"], [1, \"row\"], [1, \"col-1\", \"alert\", \"alert-dark\"], [1, \"col-11\", \"alert\", \"alert-dark\"], [1, \"text-end\"], [1, \"dropdown\", \"dropup\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"btn\", \"border-0\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"click\"], [4, \"ngIf\"], [\"rows\", \"5\", \"type\", \"text\", 1, \"form-control\", 3, \"name\", \"ngModel\", \"disabled\", \"ngModelChange\"]],\n      template: function CourseComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CourseComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.updateCourseData();\n          });\n          i0.ɵɵelementStart(2, \"div\");\n          i0.ɵɵtemplate(3, CourseComponent_div_3_Template, 23, 8, \"div\", 2);\n          i0.ɵɵpipe(4, \"async\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\")(6, \"button\", 3);\n          i0.ɵɵtext(7, \"Submit\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 2, ctx.courses))(\"ngForTrackBy\", ctx.trackByItem);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["BehaviorSubject","i0","CourseComponent","constructor","userDataService","Map","ngOnInit","getCourses","toggleEdit","disabled","console","log","trackByItem","index","course","id","getCoursesData","subscribe","data","courses","next","addUpdatedCourses","updatedCoursesArr","set","updateCourseData","forEach","alert","err","deleteCourse","userId","courseId","updatedCourses","value","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.ts","E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.html"],"sourcesContent":["import { UserDataService } from './../../services/user-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Course } from 'src/app/common/course';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit{\n\n  id:number = 1;\n  // courses?:Course[];\n  courses:BehaviorSubject<Course[]>=new BehaviorSubject<Course[]>([])\n  updatedCoursesArr:Map<number|undefined,Course> = new Map<number|undefined,Course>();\n  disabled:boolean=true;\n\n  constructor(private userDataService: UserDataService) { }\n  ngOnInit(): void {\n    this.getCourses()\n  }\n\n\n\n\n\n  toggleEdit():void{\n    this.disabled = !this.disabled;\n    console.log(this.disabled);\n    \n  }\n  trackByItem(index: number, course: Course) {\n    return course.id;\n  }\n\n\n\n\n\n\n\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(\n      data => {\n        // this.courses = data;\n        this.courses.next(data);\n      }\n    )\n  }\n   addUpdatedCourses(course:Course){\n      this.updatedCoursesArr.set(course.id, course)\n      // console.log(link);\n    }\n    updateCourseData(){\n      this.updatedCoursesArr?.forEach(course => {\n        this.userDataService.updateCourseData(this.id,course.id,course).subscribe(\n          data => {\n            alert(\"Course Updated Successfully\")\n            \n            \n            \n          },\n          err=>{\n            alert(\"Course Update Failed\")\n            console.log(err);\n          }\n        )\n      });\n    }\n    deleteCourse(userId:number,courseId?:number){\n      this.userDataService.deleteCourse(userId,courseId).subscribe(\n        data => {\n          alert(\"Course Deleted Successfully\");\n          const updatedCourses = this.courses.value.filter(course => course.id !== courseId);\n      this.courses.next(updatedCourses);\n          \n        },\n        err=>{\n          alert(\"Course Delete Failed\")\n          console.log(err);\n        }\n      )\n    }\n\n\n\n\n\n\n\n\n\n    \n}\n","\n\n\n<div class=\"alert alert-secondary  m-3 p-3\">\n    \n      \n    <form (ngSubmit)=\"updateCourseData()\">\n        <div>\n            <div *ngFor=\"let course of (courses | async) trackBy:trackByItem\">\n                <div class=\"row\">\n                    <div class=\"col-1 alert alert-dark\">\n                        <div>\n                            {{course.startDate}}:\n                        </div>\n                        <div>\n                            {{course.endDate}}\n                        </div>\n                    </div>\n\n                    <div class=\"col-11 alert alert-dark\">\n                        <div class=\"text-end\">\n                            <div class=\"dropdown dropup\">\n                                <button type=\"button\" class=\"btn border-0 \" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    ⚙️\n                                  </button>\n                                <ul class=\"dropdown-menu\">\n                                  <li>\n                                    <button (click)=\"deleteCourse(id,course.id)\" class=\"dropdown-item\">Delete</button>\n                                    <button (click)=\"toggleEdit()\" class=\"dropdown-item\">\n                                        <span *ngIf=\"disabled===true\">Edit</span>\n                                        <span *ngIf=\"disabled===false\">Close Edit</span>\n                                    </button>\n                                </li>\n                                </ul>\n                              </div>\n                        </div>\n\n\n\n                        <label>{{course.name}}</label>\n                        <textarea rows=\"5\" type=\"text\" class=\"form-control\" name=\"{{course.description}}\" \n                           [(ngModel)]=\"course.description\" \n                           (ngModelChange)=\"addUpdatedCourses(course)\"\n                           [disabled]=\"disabled\">\n                        </textarea>\n                        <!-- <span>{{course.description}}</span> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n    \n        <div>\n            <button class=\"btn btn-secondary mt-3 \" type=\"submit\">Submit</button>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}