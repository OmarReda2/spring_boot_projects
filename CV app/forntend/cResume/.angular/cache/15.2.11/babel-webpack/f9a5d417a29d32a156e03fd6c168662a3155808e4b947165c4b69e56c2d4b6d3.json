{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/user-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CourseComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Close Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17)(2, \"div\", 18)(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19)(8, \"div\", 2)(9, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function CourseComponent_div_35_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const course_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCourse(ctx_r4.id, course_r3.id));\n    });\n    i0.ɵɵtext(10, \"\\uD83D\\uDDD1\\uFE0F\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"label\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"textarea\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_div_35_Template_textarea_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const course_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(course_r3.description = $event);\n    })(\"ngModelChange\", function CourseComponent_div_35_Template_textarea_ngModelChange_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const course_r3 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addUpdatedCourses(course_r3));\n    });\n    i0.ɵɵtext(14, \"                            \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const course_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", course_r3.startDate, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", course_r3.endDate, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(course_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", course_r3.description);\n    i0.ɵɵproperty(\"ngModel\", course_r3.description)(\"disabled\", ctx_r2.disabled);\n  }\n}\nexport class CourseComponent {\n  constructor(userDataService) {\n    this.userDataService = userDataService;\n    this.id = 1;\n    // courses:BehaviorSubject<Course[]>=new BehaviorSubject<Course[]>([])\n    this.updatedCoursesArr = new Map();\n    this.disabled = true;\n  }\n  ngOnInit() {\n    this.getCourses();\n  }\n  isaddCourseInputsEnabled() {\n    return;\n  }\n  toggleEdit() {\n    this.disabled = !this.disabled;\n    console.log(this.disabled);\n  }\n  // trackByItem(index: number, course: Course) {\n  //   return course.id;\n  // }\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(data => {\n      this.courses = data;\n      // this.courses.next(data);\n    });\n  }\n\n  addUpdatedCourses(course) {\n    this.updatedCoursesArr.set(course.id, course);\n    // console.log(link);\n  }\n\n  updateCourseData() {\n    this.updatedCoursesArr?.forEach(course => {\n      this.userDataService.updateCourseData(this.id, course.id, course).subscribe(data => {\n        alert(\"Course Updated Successfully\");\n      }, err => {\n        alert(\"Course Update Failed\");\n        console.log(err);\n      });\n    });\n  }\n  deleteCourse(userId, courseId) {\n    this.userDataService.deleteCourse(userId, courseId).subscribe(data => {\n      alert(\"Course Deleted Successfully\");\n      this.getCourses();\n    }, err => {\n      alert(\"Course Delete Failed\");\n      console.log(err);\n    });\n  }\n  static {\n    this.ɵfac = function CourseComponent_Factory(t) {\n      return new (t || CourseComponent)(i0.ɵɵdirectiveInject(i1.UserDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseComponent,\n      selectors: [[\"app-course\"]],\n      decls: 39,\n      vars: 3,\n      consts: [[1, \"alert\", \"alert-secondary\", \"m-3\", \"p-3\"], [3, \"ngSubmit\"], [1, \"text-end\"], [1, \"dropdown\", \"dropup\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"btn\", \"border-0\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"click\"], [4, \"ngIf\"], [1, \"row\", \"alert\", \"alert-success\", \"border-4\"], [1, \"col-2\", \"alert\", \"alert-success\"], [\"type\", \"date\", 1, \"form-control\"], [1, \"col-10\", \"alert\", \"alert-success\"], [\"type\", \"text\", 1, \"form-control\", \"w-25\"], [\"rows\", \"5\", \"type\", \"text\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mt-3\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", \"mt-3\"], [1, \"row\"], [1, \"col-1\", \"alert\", \"alert-dark\"], [1, \"col-11\", \"alert\", \"alert-dark\"], [\"rows\", \"5\", \"type\", \"text\", 1, \"form-control\", 3, \"name\", \"ngModel\", \"disabled\", \"ngModelChange\"]],\n      template: function CourseComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CourseComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.updateCourseData();\n          });\n          i0.ɵɵelementStart(2, \"div\")(3, \"div\", 2)(4, \"div\", 3)(5, \"button\", 4);\n          i0.ɵɵtext(6, \"\\u2699\\uFE0F\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"ul\", 5)(8, \"li\")(9, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function CourseComponent_Template_button_click_9_listener() {\n            return ctx.toggleEdit();\n          });\n          i0.ɵɵtemplate(10, CourseComponent_span_10_Template, 2, 0, \"span\", 7);\n          i0.ɵɵtemplate(11, CourseComponent_span_11_Template, 2, 0, \"span\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"li\")(13, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function CourseComponent_Template_button_click_13_listener() {\n            return ctx.addCourseInputs();\n          });\n          i0.ɵɵtext(14, \" add \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(15, \"div\")(16, \"form\")(17, \"div\", 8)(18, \"div\", 9)(19, \"label\");\n          i0.ɵɵtext(20, \"from:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 10);\n          i0.ɵɵelementStart(22, \"label\");\n          i0.ɵɵtext(23, \"to:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\");\n          i0.ɵɵtext(27, \"name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 12);\n          i0.ɵɵelementStart(29, \"label\");\n          i0.ɵɵtext(30, \"description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(31, \"textarea\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 2)(33, \"button\", 14);\n          i0.ɵɵtext(34, \"Submit\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(35, CourseComponent_div_35_Template, 15, 6, \"div\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"div\")(37, \"button\", 16);\n          i0.ɵɵtext(38, \"Submit\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", ctx.disabled === true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.disabled === false);\n          i0.ɵɵadvance(24);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","CourseComponent","constructor","userDataService","Map","ngOnInit","getCourses","isaddCourseInputsEnabled","toggleEdit","disabled","console","log","getCoursesData","id","subscribe","data","courses","addUpdatedCourses","course","updatedCoursesArr","set","updateCourseData","forEach","alert","err","deleteCourse","userId","courseId","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.html","E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.ts"],"sourcesContent":["<div class=\"alert alert-secondary  m-3 p-3\">\n\n\n    <form (ngSubmit)=\"updateCourseData()\">\n        <div>\n\n            <!-- course edit button -->\n            <div class=\"text-end\">\n                <div class=\"dropdown dropup \">\n                    <button type=\"button\" class=\"btn border-0 \" data-bs-toggle=\"dropdown\"\n                        aria-expanded=\"false\">⚙️</button>\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <button (click)=\"toggleEdit()\" class=\"dropdown-item\">\n                                <span *ngIf=\"disabled===true\">Edit</span>\n                                <span *ngIf=\"disabled===false\">Close Edit</span>\n                            </button>\n                        </li>\n\n                        <li>\n                            <button (click)=\"addCourseInputs()\" class=\"dropdown-item\"> add </button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n\n\n\n            <!-- <div *ngFor=\"let course of (courses | async) trackBy:trackByItem\"> -->\n            <div>\n\n\n                <!-- add course -->\n                <form>\n                    <div class=\"row alert alert-success border-4\">\n                        <div class=\"col-2  alert alert-success\">\n                            <label>from:</label> <input type=\"date\" class=\"form-control\">\n                            <label>to:</label> <input type=\"date\" class=\"form-control\">\n                        </div>\n    \n                        <div class=\"col-10 alert alert-success\">\n                        \n                            \n                            <label>name</label>\n                            <input type=\"text\" class=\"form-control w-25\">\n    \n                            <label>description</label>\n                            <textarea rows=\"5\" type=\"text\" class=\"form-control\"></textarea>\n                        </div>\n    \n                        <div class=\"text-end\">\n                            <button class=\"btn btn-success mt-3 \" type=\"submit\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n                <!-- -->\n\n\n\n                <div *ngFor=\"let course of courses\">\n                    <div class=\"row\">\n                        <div class=\"col-1 alert alert-dark\">\n                            <div>\n                                {{course.startDate}}:\n                            </div>\n                            <div>\n                                {{course.endDate}}\n                            </div>\n                        </div>\n\n                        <div class=\"col-11 alert alert-dark\">\n                            <div class=\"text-end\">\n                                <button (click)=\"deleteCourse(id,course.id)\" class=\"dropdown-item\">🗑️</button>\n                            </div>\n\n\n\n\n\n\n                            <label>{{course.name}}</label>\n                            <textarea rows=\"5\" type=\"text\" class=\"form-control\" name=\"{{course.description}}\"\n                                [(ngModel)]=\"course.description\" (ngModelChange)=\"addUpdatedCourses(course)\"\n                                [disabled]=\"disabled\">\n                            </textarea>\n                            <!-- <span>{{course.description}}</span> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div>\n            <button class=\"btn btn-secondary mt-3 \" type=\"submit\">Submit</button>\n        </div>\n    </form>\n</div>","import { UserDataService } from './../../services/user-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Course } from 'src/app/common/course';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  id: number = 1;\n  courses?: Course[];\n  // courses:BehaviorSubject<Course[]>=new BehaviorSubject<Course[]>([])\n  updatedCoursesArr: Map<number | undefined, Course> = new Map<number | undefined, Course>();\n  disabled: boolean = true;\n  showInputsTo\n\n  constructor(private userDataService: UserDataService) { }\n  ngOnInit(): void {\n    this.getCourses()\n  }\n\n\n\n\n  isaddCourseInputsEnabled():boolean {\n    return \n  }\n  toggleEdit(): void {\n    this.disabled = !this.disabled;\n    console.log(this.disabled);\n\n  }\n  // trackByItem(index: number, course: Course) {\n  //   return course.id;\n  // }\n\n\n\n\n\n\n\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(\n      data => {\n        this.courses = data;\n        // this.courses.next(data);\n      }\n    )\n  }\n  addUpdatedCourses(course: Course) {\n    this.updatedCoursesArr.set(course.id, course)\n    // console.log(link);\n  }\n  updateCourseData() {\n    this.updatedCoursesArr?.forEach(course => {\n      this.userDataService.updateCourseData(this.id, course.id, course).subscribe(\n        data => {\n          alert(\"Course Updated Successfully\")\n\n\n\n        },\n        err => {\n          alert(\"Course Update Failed\")\n          console.log(err);\n        }\n      )\n    });\n  }\n  deleteCourse(userId: number, courseId?: number) {\n    this.userDataService.deleteCourse(userId, courseId).subscribe(\n      data => {\n        alert(\"Course Deleted Successfully\");\n        this.getCourses();\n\n      },\n      err => {\n        alert(\"Course Delete Failed\")\n        console.log(err);\n      }\n    )\n  }\n\n\n\n\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}