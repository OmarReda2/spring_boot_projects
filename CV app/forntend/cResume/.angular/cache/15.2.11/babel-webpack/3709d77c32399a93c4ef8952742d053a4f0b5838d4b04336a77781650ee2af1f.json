{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserDataService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = \"http://localhost:8080\";\n  }\n  getUserData(id) {\n    const userUrl = `${this.baseUrl}/users/${id}`;\n    return this.httpclient.get(userUrl);\n  }\n  getCoursesData(userId) {\n    const searchUrl = `${this.baseUrl}/courses/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl);\n  }\n  static {\n    this.ɵfac = function UserDataService_Factory(t) {\n      return new (t || UserDataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserDataService,\n      factory: UserDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAQ1BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IANtB,YAAO,GAAG,uBAAuB;EAMI;EAG7CC,WAAW,CAACC,EAAS;IAEnB,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACC,OAAO,UAAUF,EAAE,EAAE;IAC7C,OAAO,IAAI,CAACF,UAAU,CAACK,GAAG,CAAOF,OAAO,CAAC;EAC3C;EAEAG,cAAc,CAACC,MAAa;IAE1B,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACJ,OAAO,uCAAuCG,MAAM,EAAE;IAChF,OAAO,IAAI,CAACP,UAAU,CAACK,GAAG,CAAWG,SAAS,CAAC;EACjD;;;uBArBWV,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAW,SAAfX,eAAe;MAAAY,YAFd;IAAM;EAAA","names":["UserDataService","constructor","httpclient","getUserData","id","userUrl","baseUrl","get","getCoursesData","userId","searchUrl","factory","providedIn"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\services\\user-data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../common/user';\nimport { Course } from '../common/course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  private baseUrl = \"http://localhost:8080\";\n  \n\n\n\n\n  constructor(private httpclient:HttpClient) { }\n\n\n  getUserData(id:number):Observable<User>{\n\n    const userUrl = `${this.baseUrl}/users/${id}`\n    return this.httpclient.get<User>(userUrl);\n  }\n\n  getCoursesData(userId:number):Observable<Course[]>{\n\n    const searchUrl = `${this.baseUrl}/courses/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get<Course[]>(searchUrl)\n  }\n}\n\ninterface getCoursesRes\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}