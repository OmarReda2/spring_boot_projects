{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserDataService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = \"http://localhost:8080\";\n  }\n  getUserData(id) {\n    const userUrl = `${this.baseUrl}/users/${id}`;\n    return this.httpclient.get(userUrl);\n  }\n  updateUserData(id, user) {\n    const userUrl = `${this.baseUrl}/users/${id}`;\n    return this.httpclient.put(userUrl, user);\n  }\n  getCoursesData(userId) {\n    const searchUrl = `${this.baseUrl}/courses/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl).pipe(map(res => res._embedded.courses));\n  }\n  updateCourseData(userId, courseId, course) {\n    const searchUrl = `${this.baseUrl}/courses/updateCourse/${userId}/${courseId}`;\n    return this.httpclient.put(searchUrl, course);\n  }\n  deleteCourse(userId, courseId) {\n    const url = `${this.baseUrl}/courses/deleteCourse?userId=${userId}&courseId=${courseId}`;\n    return this.httpclient.delete(url);\n  }\n  addCourseData(userId, course) {\n    const url = `${this.baseUrl}/courses/addCourse/${userId}`;\n  }\n  getEducationsData(userId) {\n    const searchUrl = `${this.baseUrl}/educations/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl).pipe(map(res => res._embedded.educations));\n  }\n  updateEductionData(userId, eduId, edu) {\n    const searchUrl = `${this.baseUrl}/educations/updateEducation?userId=${userId}&eduId=${eduId}`;\n    return this.httpclient.put(searchUrl, edu);\n  }\n  getLinksData(userId) {\n    const searchUrl = `${this.baseUrl}/links/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get(searchUrl).pipe(map(res => res._embedded.links));\n  }\n  updateLinkData(userId, urlId, link) {\n    const searchUrl = `${this.baseUrl}/links/updateLinkByUserId?urlId=${urlId}&userId=${userId}`;\n    return this.httpclient.put(searchUrl, link);\n  }\n  static {\n    this.ɵfac = function UserDataService_Factory(t) {\n      return new (t || UserDataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserDataService,\n      factory: UserDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["map","UserDataService","constructor","httpclient","getUserData","id","userUrl","baseUrl","get","updateUserData","user","put","getCoursesData","userId","searchUrl","pipe","res","_embedded","courses","updateCourseData","courseId","course","deleteCourse","url","delete","addCourseData","getEducationsData","educations","updateEductionData","eduId","edu","getLinksData","links","updateLinkData","urlId","link","factory","providedIn"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\services\\user-data.service.ts"],"sourcesContent":["import { User } from 'src/app/common/user';\nimport { Link } from './../common/link';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Course } from '../common/course';\nimport { Education } from '../common/education';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  private baseUrl = \"http://localhost:8080\";\n\n  constructor(private httpclient:HttpClient) { }\n\n\n\n\n\n\n\n\n\n  getUserData(id:number):Observable<User>{\n    const userUrl = `${this.baseUrl}/users/${id}`\n    return this.httpclient.get<User>(userUrl);\n  }\n  updateUserData(id:number, user?:User):Observable<User>{\n    const userUrl = `${this.baseUrl}/users/${id}`\n    return this.httpclient.put<User>(userUrl, user);\n  }\n\n\n\n\n\n\n\n\n\n\n\n  getCoursesData(userId:number):Observable<Course[]>{\n    const searchUrl = `${this.baseUrl}/courses/search/findByUserId?userId=${userId}`;\n    return this.httpclient.get<getCoursesRes>(searchUrl).pipe(\n      map(res => res._embedded.courses)\n    )\n  }\n  updateCourseData(userId:number,courseId?:number,course?:Course):Observable<Course>{\n    const searchUrl = `${this.baseUrl}/courses/updateCourse/${userId}/${courseId}`\n    return this.httpclient.put<Course>(searchUrl,course)\n  }\n  deleteCourse(userId:number,courseId?:number):Observable<number>{\n    const url = `${this.baseUrl}/courses/deleteCourse?userId=${userId}&courseId=${courseId}`\n    return this.httpclient.delete<number>(url)\n  }\n  addCourseData(userId:number,course:Course):Observable<Course>{\n     const url = `${this.baseUrl}/courses/addCourse/${userId}`\n  }\n  \n  \n\n\n\n\n\n\n  getEducationsData(userId:number):Observable<Education[]>{\n    const searchUrl = `${this.baseUrl}/educations/search/findByUserId?userId=${userId}`\n    return this.httpclient.get<getEducatoinsRes>(searchUrl).pipe(\n      map(res => res._embedded.educations)\n    )\n  }\n  updateEductionData(userId:number,eduId?:number,edu?:Education):Observable<Education>{\n    const searchUrl = `${this.baseUrl}/educations/updateEducation?userId=${userId}&eduId=${eduId}`\n    return this.httpclient.put<Education>(searchUrl,edu)\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  getLinksData(userId:number):Observable<Link[]>{\n    const searchUrl = `${this.baseUrl}/links/search/findByUserId?userId=${userId}`\n    return this.httpclient.get<getLinksRes>(searchUrl).pipe(\n      map(res => res._embedded.links)\n    )\n  }\n  updateLinkData(userId:number,urlId?:number,link?:Link):Observable<Link>{\n    const searchUrl = `${this.baseUrl}/links/updateLinkByUserId?urlId=${urlId}&userId=${userId}`\n    return this.httpclient.put<Link>(searchUrl,link)\n  }\n}\n\n\n\n\n\n\n\n\ninterface getCoursesRes {\n  _embedded: {\n    courses: Course[]\n  }\n}\n\ninterface getEducatoinsRes {\n  _embedded: {\n    educations: Education[];\n  }\n}\n\ninterface getLinksRes {\n  _embedded: {\n    links: Link[];\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}