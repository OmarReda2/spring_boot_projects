{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/user-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CourseComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4)(2, \"div\", 5)(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"textarea\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_div_3_Template_textarea_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const course_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(course_r1.description = $event);\n    })(\"ngModelChange\", function CourseComponent_div_3_Template_textarea_ngModelChange_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addUpdatedCourses(course_r1));\n    });\n    i0.ɵɵtext(11, \"                        \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", course_r1.startDate, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", course_r1.endDate, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(course_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", course_r1.description);\n    i0.ɵɵproperty(\"ngModel\", course_r1.description);\n  }\n}\nexport class CourseComponent {\n  constructor(userDataService) {\n    this.userDataService = userDataService;\n    this.id = 1;\n    this.updatedCoursesArr = new Map();\n  }\n  ngOnInit() {\n    this.getCourses();\n  }\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(data => {\n      this.courses = data;\n    });\n  }\n  addUpdatedCourses(course) {\n    this.updatedCoursesArr.set(course.id, course);\n    // console.log(link);\n  }\n\n  updateCourseData() {\n    this.updatedCoursesArr?.forEach(course => {\n      this.userDataService.updateCourseData(this.id, course.id, course).subscribe(data => {\n        alert(\"Course Updated Successfully\");\n      }, err => {\n        alert(\"Course Update Failed\");\n        console.log(err);\n      });\n    });\n  }\n  static {\n    this.ɵfac = function CourseComponent_Factory(t) {\n      return new (t || CourseComponent)(i0.ɵɵdirectiveInject(i1.UserDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseComponent,\n      selectors: [[\"app-course\"]],\n      decls: 7,\n      vars: 1,\n      consts: [[1, \"alert\", \"alert-secondary\", \"m-3\", \"p-3\"], [3, \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", \"mt-3\"], [1, \"row\"], [1, \"col-1\", \"alert\", \"alert-dark\"], [1, \"col-11\", \"alert\", \"alert-dark\"], [\"rows\", \"5\", \"type\", \"text\", 1, \"form-control\", 3, \"name\", \"ngModel\", \"ngModelChange\"]],\n      template: function CourseComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CourseComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.updateCourseData();\n          });\n          i0.ɵɵelementStart(2, \"div\");\n          i0.ɵɵtemplate(3, CourseComponent_div_3_Template, 12, 5, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\")(5, \"button\", 3);\n          i0.ɵɵtext(6, \"Submit\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAQYA,2BAAoC;IAIpBA,YACJ;IAAAA,iBAAM;IACNA,2BAAK;IACDA,YACJ;IAAAA,iBAAM;IAGVA,8BAAqC;IAE1BA,YAAe;IAAAA,iBAAQ;IAC9BA,oCACgF;IAA7EA;MAAA;MAAA;MAAA,OAAaA,8CAA0B;IAAA,EAAP;MAAA;MAAA;MAAA;MAAA,OAAkBA,kDAAyB;IAAA,EAA3C;IACnCA;IAAAA,iBAAW;;;;IAZPA,eACJ;IADIA,qDACJ;IAEIA,eACJ;IADIA,kDACJ;IAKOA,eAAe;IAAfA,oCAAe;IAC8BA,eAA6B;IAA7BA,uDAA6B;IAC9EA,+CAAgC;;;ACd3D,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAJnC,OAAE,GAAU,CAAC;IAEb,sBAAiB,GAAgC,IAAIC,GAAG,EAA2B;EAE3B;EACxDC,QAAQ;IAEN,IAAI,CAACC,UAAU,EAAE;EACnB;EAGAA,UAAU;IACR,IAAI,CAACH,eAAe,CAACI,cAAc,CAAC,IAAI,CAACC,EAAE,CAAC,CAACC,SAAS,CACpDC,IAAI,IAAG;MACL,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CACF;EACH;EACCE,iBAAiB,CAACC,MAAa;IAC5B,IAAI,CAACC,iBAAiB,CAACC,GAAG,CAACF,MAAM,CAACL,EAAE,EAAEK,MAAM,CAAC;IAC7C;EACF;;EACAG,gBAAgB;IACd,IAAI,CAACF,iBAAiB,EAAEG,OAAO,CAACJ,MAAM,IAAG;MACvC,IAAI,CAACV,eAAe,CAACa,gBAAgB,CAAC,IAAI,CAACR,EAAE,EAACK,MAAM,CAACL,EAAE,EAACK,MAAM,CAAC,CAACJ,SAAS,CACvEC,IAAI,IAAG;QACLQ,KAAK,CAAC,6BAA6B,CAAC;MAGtC,CAAC,EACDC,GAAG,IAAE;QACHD,KAAK,CAAC,sBAAsB,CAAC;QAC7BE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAElB,CAAC,CACF;IACH,CAAC,CAAC;EACJ;;;uBAvCSlB,eAAe;IAAA;EAAA;;;YAAfA,eAAe;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDN5B1B,8BAA4C;UAGlCA;YAAA,OAAY2B,sBAAkB;UAAA,EAAC;UACjC3B,2BAAK;UACDA,iEAoBM;UACVA,iBAAM;UAGNA,2BAAK;UACqDA,sBAAM;UAAAA,iBAAS;;;UAzB7CA,eAAU;UAAVA,qCAAU","names":["i0","CourseComponent","constructor","userDataService","Map","ngOnInit","getCourses","getCoursesData","id","subscribe","data","courses","addUpdatedCourses","course","updatedCoursesArr","set","updateCourseData","forEach","alert","err","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.html","E:\\important - (To Backup)\\Programming (Practice & Projects)\\Projects\\CV app\\forntend\\cResume\\src\\app\\components\\course\\course.component.ts"],"sourcesContent":["\n\n\n<div class=\"alert alert-secondary  m-3 p-3\">\n    \n      \n    <form (ngSubmit)=\"updateCourseData()\">\n        <div>\n            <div *ngFor=\"let course of courses\">\n                <div class=\"row\">\n                    <div class=\"col-1 alert alert-dark\">\n                        <div>\n                            {{course.startDate}}:\n                        </div>\n                        <div>\n                            {{course.endDate}}\n                        </div>\n                    </div>\n\n                    <div class=\"col-11 alert alert-dark\">\n                        \n                        <label>{{course.name}}</label>\n                        <textarea rows=\"5\" type=\"text\" class=\"form-control\" name=\"{{course.description}}\" \n                           [(ngModel)]=\"course.description\" (ngModelChange)=\"addUpdatedCourses(course)\">\n                        </textarea>\n                        <!-- <span>{{course.description}}</span> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n    \n        <div>\n            <button class=\"btn btn-secondary mt-3 \" type=\"submit\">Submit</button>\n        </div>\n    </form>\n</div>\n","import { UserDataService } from './../../services/user-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Course } from 'src/app/common/course';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit{\n\n  id:number = 1;\n  courses?:Course[];\n  updatedCoursesArr:Map<number|undefined,Course> = new Map<number|undefined,Course>();\n\n  constructor(private userDataService: UserDataService) { }\n  ngOnInit(): void {\n    \n    this.getCourses()\n  }\n\n\n  getCourses() {\n    this.userDataService.getCoursesData(this.id).subscribe(\n      data => {\n        this.courses = data;\n      }\n    )\n  }\n   addUpdatedCourses(course:Course){\n      this.updatedCoursesArr.set(course.id, course)\n      // console.log(link);\n    }\n    updateCourseData(){\n      this.updatedCoursesArr?.forEach(course => {\n        this.userDataService.updateCourseData(this.id,course.id,course).subscribe(\n          data => {\n            alert(\"Course Updated Successfully\")\n            \n            \n          },\n          err=>{\n            alert(\"Course Update Failed\")\n            console.log(err);\n            \n          }\n        )\n      });\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}